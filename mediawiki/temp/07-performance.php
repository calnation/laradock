<?php
# This file was automatically generated by the MediaWiki 1.28.1
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
    # and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
    # https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if(!defined('MEDIAWIKI')) {
    exit;
}

# == Shared memory settings
# ====================================================

$wgSessionCacheType = CACHE_DB;
$wgMainCacheType    = CACHE_ACCEL;
$wgMessageCacheType = CACHE_ACCEL;
$wgParserCacheType  = CACHE_ACCEL;

//$wgMemCachedServers = array( 'memcached:11211', ); // if using memcached
$wgEnableSidebarCache = true;

# disable database-intensive features, so that they can be managed/controlled separately if desired. This includes reading special pages marked as expensive from the cache instead of regenerating them every time they are requested.
    $wgMiserMode        = true;


# This will cause one item in the job queue to run on average every 10000 page views
# Uncomment when you have traffic
#$wgJobRunRate = 0.0001; // Number of jobs to perform per request.

# Query string length limit for ResourceLoader. Only set this if
    # your web server has a query string length limit (then set it to that limit),
# or if you have suhosin.get.max_value_length set in php.ini (then set it to
    # that value)
$wgResourceLoaderMaxQueryLength = -1;

ini_set('memory_limit', '64M');
$wgMaxShellMemory   = 524288;
$wgMemCachedServers = [];

# cache static pages for non-logged-in users to reduce database traffic
    $wgUseFileCache       = true;
$wgUseGzip            = true;
$wgUseETag            = true;

// $wgDisableOutputCompression = true; // Uncomment to disable output compression

# CSS-based preferences supposedly cause about 20 times slower page loads
# https://phabricator.wikimedia.org/rSVN63707
$wgAllowUserCssPrefs = false;
//$wgUseSquid = true;
//$wgSquidServers = array('<your IPv4 address>');
//$wgSquidServersNoPurge = array('127.0.0.1');


# == History
# ====================================================

$wgCompressRevisions    = false; // Compress new page revisions if possible with zlib
# Once articles have this many revisions, the bigdelete right is required on top of the normal delete right
$wgDeleteRevisionsLimit = '250'; // databases don't have much memory - let's not overload them in future
# Dormancy: length recent changes history should be retained (seconds)
$wgRCMaxAge             = 180 * 24 * 3600; // 180 days
